Kết nối sys /as sysdba

	
 grant create session to QLBanHang
grant create table to QLBanHang
alter user QLBanHang quota unlimited on users 

grant all privilege to QLBanHang

GRANT CREATE PROCEDURE TO tie;

GRANT CREATE TRIGGER TO tie;

GRANT CREATE ANY FUNCTION TO tie;


1. Cấp quyền sử dụng các bảng cụ thể cho stored procedure, trigger, và function (nếu cần). 
   Ví dụ, để cấp quyền SELECT, INSERT, UPDATE, và DELETE trên bảng KHACHHANG và VATTU cho người dùng tie:

GRANT SELECT, INSERT, UPDATE, DELETE ON KHACHHANG TO tie;
GRANT SELECT, INSERT, UPDATE, DELETE ON VATTU TO tie;




CREATE  TABLE KHACHHANG (
    MAKH VARCHAR2(5) PRIMARY KEY,
    TENKH NVARCHAR2(30) NOT NULL,
    DIACHI NVARCHAR2(50),
    DT VARCHAR2(11) CHECK (LENGTH(DT) >= 8 AND LENGTH(DT) <= 11),
    EMAIL VARCHAR2(30)
);


CREATE TABLE VATTU (
    MAVT VARCHAR2(5)PRIMARY KEY,
    TENVT NVARCHAR2(30) NOT NULL,
    DVT NVARCHAR2(20),
    GIAMUA NUMBER CHECK (GIAMUA > 0),
    SLTON NUMBER CHECK (SLTON >= 0)
);


CREATE TABLE HOADON (
    MAHD VARCHAR2(10) PRIMARY KEY,
    NGAY DATE,
    MAKH VARCHAR2(5),
    TONGTG NUMBER(10,2),
    CONSTRAINT FK_HOADON_MAKH FOREIGN KEY (MAKH)
    REFERENCES KHACHHANG (MAKH)
);



CREATE TABLE CTHD (
    MAHD VARCHAR2(10),
    MAVT VARCHAR2(5),
    SL NUMBER CHECK (SL > 0),
    KHUYENMAI NUMBER(10,2),
    GIABAN NUMBER(10,2),
    CONSTRAINT FK_CTHD_MAHD FOREIGN KEY (MAHD)
    REFERENCES HOADON (MAHD),
    CONSTRAINT FK_CTHD_MAVT FOREIGN KEY (MAVT)
    REFERENCES VATTU (MAVT)
);

--KHACHHANG
INSERT INTO KHACHHANG (MAKH, TENKH, DIACHI, DT, EMAIL) VALUES ('KH01', 'Nguyễn Thị Bé', 'Tân Bình', '38457895', 'bnt@yahoo.com');
INSERT INTO KHACHHANG (MAKH, TENKH, DIACHI, DT, EMAIL) VALUES ('KH02', 'Lê Hoàng Nam', 'Bình Chánh', '39878987', 'namlehoang@gmail.com');
INSERT INTO KHACHHANG (MAKH, TENKH, DIACHI, DT, EMAIL) VALUES ('KH03', 'Trần Thị Chiều', 'Tân Bình', '38457895', NULL);
INSERT INTO KHACHHANG (MAKH, TENKH, DIACHI, DT, EMAIL) VALUES ('KH04', 'Mai Thị Quế Anh', 'Bình Chánh', NULL, NULL);
INSERT INTO KHACHHANG (MAKH, TENKH, DIACHI, DT, EMAIL) VALUES ('KH05', 'Lê Văn Sáng', 'Quận 10', NULL, 'sanglv@hcm.vnn.vn');
INSERT INTO KHACHHANG (MAKH, TENKH, DIACHI, DT, EMAIL) VALUES ('KH06', 'Trần Hoàng', 'Tân Bình', '38457897', NULL);

SELECT * FROM KHACHHANG;
--VATTU
INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VT01', 'Xi măng', 'Bao', 50000, 5000);
INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VT02', 'Cát', 'Khối', 45000, 50000);
INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VT03', 'Gạch ống', 'Viên', 120, 800000);
INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VT04', 'Gạch thẻ', 'Viên', 110, 800000);
INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VT05', 'Đá lớn', 'Khối', 25000, 100000);
INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VT06', 'Đá nhỏ', 'Khối', 33000, 100000);
INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VT07', 'Lam gió', 'Cái', 15000, 50000);

select * from VATTU;

--HOADON
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD001', TO_DATE('12/05/2016', 'DD/MM/YYYY'), 'KH01', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD002', TO_DATE('25/05/2016', 'DD/MM/YYYY'), 'KH02', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD003', TO_DATE('25/05/2016', 'DD/MM/YYYY'), 'KH01', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD004', TO_DATE('25/05/2016', 'DD/MM/YYYY'), 'KH04', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD005', TO_DATE('26/05/2016', 'DD/MM/YYYY'), 'KH04', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD006', TO_DATE('02/06/2016', 'DD/MM/YYYY'), 'KH03', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD007', TO_DATE('22/06/2016', 'DD/MM/YYYY'), 'KH04', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD008', TO_DATE('25/06/2016', 'DD/MM/YYYY'), 'KH03', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD009', TO_DATE('15/08/2016', 'DD/MM/YYYY'), 'KH04', NULL);
INSERT INTO HOADON (MAHD, NGAY, MAKH, TONGTG) VALUES ('HD010', TO_DATE('30/09/2016', 'DD/MM/YYYY'), 'KH01', NULL);
select * from HOADON;

--CTHD
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD001', 'VT01', 5, NULL, 52000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD001', 'VT05', 10, NULL, 30000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD002', 'VT03', 10000, NULL, 150);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD003', 'VT02', 20, NULL, 55000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD004', 'VT03', 50000, NULL, 150);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD004', 'VT04', 20000, NULL, 120);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD005', 'VT05', 10, NULL, 30000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD005', 'VT06', 15, NULL, 35000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD005', 'VT07', 20, NULL, 17000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD006', 'VT04', 10000, NULL, 120);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD007', 'VT04', 20000, NULL, 125);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD008', 'VT01', 100, NULL, 55000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD008', 'VT02', 20, NULL, 47000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD009', 'VT02', 25, NULL, 48000);
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD010', 'VT01', 25, NULL, 57000);
select*from CTHD;

--PROCEDURE
--1
CREATE OR REPLACE PROCEDURE KHACHHANG_MUAHANG_NGAYX (X IN DATE)
IS
  CURSOR c_customers IS
    SELECT KH.MAKH, KH.TENKH
    FROM KHACHHANG KH
    JOIN HOADON HD ON KH.MAKH = HD.MAKH
    WHERE HD.NGAY = X;
BEGIN
  FOR customer_rec IN c_customers LOOP
    DBMS_OUTPUT.PUT_LINE('MAKH: ' || customer_rec.MAKH || ', TENKH: ' || customer_rec.TENKH);
  END LOOP;
END KHACHHANG_MUAHANG_NGAYX;
SET SERVEROUTPUT ON;

BEGIN
  KHACHHANG_MUAHANG_NGAYX(TO_DATE('2016-05-25', 'YYYY-MM-DD'));
END;


--2
CREATE OR REPLACE PROCEDURE KHACHHANG_TONGGIATRI (X IN NUMBER)
IS
BEGIN
  FOR c IN (
    SELECT KH.MAKH, KH.TENKH, SUM(HD.TONGTG) AS TONGGIATRI
    FROM KHACHHANG KH
    JOIN HOADON HD ON KH.MAKH = HD.MAKH
    GROUP BY KH.MAKH, KH.TENKH
    HAVING SUM(HD.TONGTG) > X
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('MAKH: ' || c.MAKH || ', TENKH: ' || c.TENKH || ', TONGGIATRI: ' || c.TONGGIATRI);
  END LOOP;
END KHACHHANG_TONGGIATRI;
SET SERVEROUTPUT ON;
BEGIN
  KHACHHANG_TONGGIATRI(1000000); 
END;
UPDATE HOADON hd
SET TONGTG = (
  SELECT SUM(cthd.GIABAN * cthd.SL)
  FROM CTHD cthd
  WHERE cthd.MAHD = hd.MAHD
)
WHERE EXISTS (
  SELECT 1
  FROM CTHD cthd
  WHERE cthd.MAHD = hd.MAHD
);
COMMIT;

--3
CREATE OR REPLACE PROCEDURE TOP_KHACHHANG (X IN NUMBER)
IS
  row_counter NUMBER := 0;
BEGIN
  FOR c IN (
    SELECT KH.MAKH, KH.TENKH, SUM(HD.TONGTG) AS TONGGIATRI
    FROM KHACHHANG KH
    JOIN HOADON HD ON KH.MAKH = HD.MAKH
    GROUP BY KH.MAKH, KH.TENKH
    ORDER BY SUM(HD.TONGTG) DESC
  ) LOOP
    EXIT WHEN row_counter >= X;
    DBMS_OUTPUT.PUT_LINE('MAKH: ' || c.MAKH || ', TENKH: ' || c.TENKH || ', TONGGIATRI: ' || c.TONGGIATRI);
    row_counter := row_counter + 1;
  END LOOP;
END TOP_KHACHHANG;

BEGIN
  TOP_KHACHHANG(5);
END;


--4
CREATE OR REPLACE PROCEDURE TOP_MATHANG_BANRA (X IN NUMBER)
IS
  row_counter NUMBER := 0;
BEGIN
  FOR c IN (
    SELECT MAVT, SUM(SL) AS TONGSLBAN
    FROM CTHD
    GROUP BY MAVT
    ORDER BY SUM(SL) DESC
  ) LOOP
    EXIT WHEN row_counter >= X;
    DBMS_OUTPUT.PUT_LINE('MAVT: ' || c.MAVT || ', TONGSLBAN: ' || c.TONGSLBAN);
    row_counter := row_counter + 1;
  END LOOP;
END TOP_MATHANG_BANRA;
BEGIN
  TOP_MATHANG_BANRA(5); 
END;




--5
CREATE OR REPLACE PROCEDURE MAT_HANG_LAI_IT_NHAT(p_x IN NUMBER) IS
  counter NUMBER := 0; 
BEGIN
  FOR c IN (
    SELECT V.MAVT, 
           V.TENVT, 
           SUM((C.GIABAN - V.GIAMUA) * C.SL) AS LAI
    FROM VATTU V
    JOIN CTHD C ON V.MAVT = C.MAVT
    GROUP BY V.MAVT, V.TENVT
    ORDER BY SUM((C.GIABAN - V.GIAMUA) * C.SL) ASC
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('MAVT: ' || c.MAVT || ', TENVT: ' || c.TENVT || ', LAI: ' || c.LAI);
    counter := counter + 1; 
    EXIT WHEN counter >= p_x; 
  END LOOP;
END MAT_HANG_LAI_IT_NHAT;

BEGIN
  MAT_HANG_LAI_IT_NHAT(5); 
END;


--6
CREATE OR REPLACE PROCEDURE TOP_DONHANG (X IN NUMBER)
IS
  row_counter NUMBER := 0;
BEGIN
  FOR c IN (
    SELECT MAHD, TONGTG
    FROM HOADON
    ORDER BY TONGTG DESC
  ) LOOP
    EXIT WHEN row_counter >= X;
    DBMS_OUTPUT.PUT_LINE('MAHD: ' || c.MAHD || ', TONGTG: ' || c.TONGTG);
    row_counter := row_counter + 1;
  END LOOP;
END TOP_DONHANG;

BEGIN
  TOP_DONHANG(5); 
END;


--7
CREATE OR REPLACE PROCEDURE TINH_KHUYENMAI
IS
BEGIN
  UPDATE CTHD
  SET KHUYENMAI = CASE
    WHEN SL > 500 THEN GIABAN * 0.1
    WHEN SL > 100 THEN GIABAN * 0.05
    ELSE KHUYENMAI
  END;
  COMMIT;
END TINH_KHUYENMAI;
ALTER TRIGGER trg_unique_tenvt DISABLE;
ALTER TRIGGER trg_check_slton DISABLE;
ALTER TRIGGER TRG_MAX_VALUE_ORDER DISABLE;
-- Chạy procedure
BEGIN
  TINH_KHUYENMAI;
END;

ALTER TRIGGER trg_unique_tenvt ENABLE;
ALTER TRIGGER trg_check_slton ENABLE;
ALTER TRIGGER TRG_MAX_VALUE_ORDER ENABLE;
select *  from CTHD;
select * from HOADON;
--8
CREATE OR REPLACE PROCEDURE CAPNHAT_SLTON
IS
BEGIN
  UPDATE VATTU VT
  SET SLTON = SLTON - (SELECT SUM(SL) FROM CTHD WHERE CTHD.MAVT = VT.MAVT);
  COMMIT;
END CAPNHAT_SLTON;
BEGIN
  CAPNHAT_SLTON;
END;

--9
CREATE OR REPLACE PROCEDURE TINH_TRIGIA_HOADON
IS
BEGIN
  UPDATE HOADON HD
  SET TONGTG = (SELECT SUM(GIABAN * SL) FROM CTHD WHERE CTHD.MAHD = HD.MAHD);
  COMMIT;
END TINH_TRIGIA_HOADON;

BEGIN
  TINH_TRIGIA_HOADON;
END;

--FUNCTION
--1
CREATE OR REPLACE FUNCTION DOANHTHU_NAM(p_nam IN NUMBER) RETURN NUMBER IS
  total_revenue NUMBER := 0;
BEGIN
  SELECT SUM(TONGTG) INTO total_revenue
  FROM HOADON
  WHERE EXTRACT(YEAR FROM NGAY) = p_nam;
  RETURN total_revenue;
END DOANHTHU_NAM;
DECLARE
  revenue NUMBER;
BEGIN
  revenue := DOANHTHU_NAM(2016);
  DBMS_OUTPUT.PUT_LINE('Doanh thu nam 2016: ' || revenue);
END;

--2
CREATE OR REPLACE FUNCTION DOANHTHU_THANG_NAM(p_thang IN NUMBER, p_nam IN NUMBER) RETURN NUMBER IS
  total_revenue NUMBER := 0;
BEGIN
  SELECT SUM(TONGTG) INTO total_revenue
  FROM HOADON
  WHERE EXTRACT(MONTH FROM NGAY) = p_thang AND EXTRACT(YEAR FROM NGAY) = p_nam;
  RETURN total_revenue;
END DOANHTHU_THANG_NAM;
DECLARE
  revenue NUMBER;
BEGIN
  revenue := DOANHTHU_THANG_NAM(5, 2016);
  DBMS_OUTPUT.PUT_LINE('Doanh thu thang 5 nam 2016: ' || revenue);
END;

--3
CREATE OR REPLACE FUNCTION DOANHTHU_KHACHHANG(p_makh IN VARCHAR2) RETURN NUMBER IS
  total_revenue NUMBER := 0;
BEGIN
  SELECT SUM(TONGTG) INTO total_revenue
  FROM HOADON
  WHERE MAKH = p_makh;
  RETURN total_revenue;
END DOANHTHU_KHACHHANG;
DECLARE
  revenue NUMBER;
BEGIN
  revenue := DOANHTHU_KHACHHANG('KH01');
  DBMS_OUTPUT.PUT_LINE('Doanh thu cua KH01: ' || revenue);
END;

--4
CREATE OR REPLACE FUNCTION TONGSL_BAN(p_mavt IN VARCHAR2, p_thang IN NUMBER DEFAULT NULL, p_nam IN NUMBER) RETURN NUMBER IS
  total_quantity_sold NUMBER := 0;
BEGIN
  IF p_thang IS NULL THEN
    SELECT SUM(SL) INTO total_quantity_sold
    FROM CTHD JOIN HOADON ON CTHD.MAHD = HOADON.MAHD
    WHERE MAVT = p_mavt AND EXTRACT(YEAR FROM HOADON.NGAY) = p_nam;
  ELSE
    SELECT SUM(SL) INTO total_quantity_sold
    FROM CTHD JOIN HOADON ON CTHD.MAHD = HOADON.MAHD
    WHERE MAVT = p_mavt AND EXTRACT(MONTH FROM HOADON.NGAY) = p_thang AND EXTRACT(YEAR FROM HOADON.NGAY) = p_nam;
  END IF;
  RETURN total_quantity_sold;
END TONGSL_BAN;

DECLARE
  total_sold NUMBER;
BEGIN
  total_sold := TONGSL_BAN('VT01', 5, 2016);
  DBMS_OUTPUT.PUT_LINE('Tong SL ban cua VT01 trong thang 5 nam 2016: ' || total_sold);
END;

--5
CREATE OR REPLACE FUNCTION TINHLAI(p_mavt IN VARCHAR2 DEFAULT NULL) RETURN NUMBER IS
  total_profit NUMBER := 0;
BEGIN
  IF p_mavt IS NOT NULL THEN
    SELECT SUM((GIABAN - GIAMUA) * SL) INTO total_profit
    FROM CTHD, VATTU
    WHERE CTHD.MAVT = VATTU.MAVT AND CTHD.MAVT = p_mavt;
    ELSE
SELECT SUM((CTHD.GIABAN - VATTU.GIAMUA) * CTHD.SL) INTO total_profit
FROM CTHD
JOIN VATTU ON CTHD.MAVT = VATTU.MAVT;
END IF;
RETURN total_profit;
END TINHLAI;
//1 mot hang 
DECLARE
  profit NUMBER;
BEGIN
  profit := TINHLAI('VT01');
  DBMS_OUTPUT.PUT_LINE('Lai cua VT01: ' || profit);
END;


//tinh het
DECLARE
  profit NUMBER;
BEGIN
  profit := TINHLAI();
  DBMS_OUTPUT.PUT_LINE('Lai cua tat ca mat hang: ' || profit);
END;

--TRIGGER
--1
CREATE OR REPLACE TRIGGER trg_fk_check
BEFORE INSERT OR UPDATE ON CTHD
FOR EACH ROW
DECLARE
  v_hoadon_exists NUMBER;
  v_vattu_exists NUMBER;
BEGIN
  
  SELECT COUNT(*) INTO v_hoadon_exists FROM HOADON WHERE MAHD = :NEW.MAHD;
  IF v_hoadon_exists = 0 THEN
    RAISE_APPLICATION_ERROR(-20010, 'Mã hóa đơn không tồn tại trong bảng HOADON.');
  END IF;
  
  
  SELECT COUNT(*) INTO v_vattu_exists FROM VATTU WHERE MAVT = :NEW.MAVT;
  IF v_vattu_exists = 0 THEN
    RAISE_APPLICATION_ERROR(-20011, 'Mã vật tư không tồn tại trong bảng VATTU.');
  END IF;
END;

INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD001', 'VT01', 10, NULL, 10000);


--2
CREATE OR REPLACE TRIGGER trg_unique_tenvt
BEFORE INSERT OR UPDATE ON VATTU
FOR EACH ROW
DECLARE
  cnt NUMBER;
BEGIN
  SELECT COUNT(*)
  INTO cnt
  FROM VATTU
  WHERE UPPER(TENVT) = UPPER(:NEW.TENVT);
  IF cnt > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Không được nhập hai vật tư có cùng tên.');
  END IF;
END;

INSERT INTO VATTU (MAVT, TENVT, DVT, GIAMUA, SLTON) VALUES ('VTXX', 'Xi măng', 'Bao', 50000, 100);

--3
CREATE OR REPLACE TRIGGER trg_set_khuyenmai
BEFORE INSERT OR UPDATE ON CTHD
FOR EACH ROW
BEGIN
  IF :NEW.SL > 500 THEN
    :NEW.KHUYENMAI := :NEW.GIABAN * 0.1;
  ELSIF :NEW.SL > 100 THEN
    :NEW.KHUYENMAI := :NEW.GIABAN * 0.05;
  ELSE
    :NEW.KHUYENMAI := 0;
  END IF;
END;
INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD001', 'VT01', 600, NULL, 10000);

--4
CREATE OR REPLACE TRIGGER trg_check_slton
BEFORE INSERT OR UPDATE ON CTHD
FOR EACH ROW
DECLARE
  slton_current NUMBER;
BEGIN
  SELECT SLTON INTO slton_current FROM VATTU WHERE MAVT = :NEW.MAVT;
  IF slton_current < :NEW.SL THEN
    RAISE_APPLICATION_ERROR(-20002, 'Số lượng tồn không đủ.');
  END IF;
  
  UPDATE VATTU SET SLTON = SLTON - :NEW.SL WHERE MAVT = :NEW.MAVT;
END;


INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD002', 'VT01', 100, NULL, 10000);

--5
CREATE OR REPLACE TRIGGER trg_delete_single_vattu
BEFORE DELETE ON VATTU
DECLARE
  v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count FROM VATTU;
  IF v_count > 1 THEN
    RAISE_APPLICATION_ERROR(-20003, 'Không thể xóa nhiều hơn một vật tư cùng một lúc.');
  END IF;
END;
DELETE FROM VATTU WHERE MAVT = 'VTXX';

--6
CREATE OR REPLACE TRIGGER trg_max_5_items
BEFORE INSERT ON CTHD
FOR EACH ROW
DECLARE
  item_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO item_count FROM CTHD WHERE MAHD = :NEW.MAHD;
  IF item_count >= 5 THEN
    RAISE_APPLICATION_ERROR(-20004, 'Mỗi hóa đơn chỉ cho phép bán tối đa 5 mặt hàng.');
  END IF;
END;


INSERT INTO CTHD (MAHD, MAVT, SL, KHUYENMAI, GIABAN) VALUES ('HD001', 'VT03', 2, NULL, 15000);
--7
CREATE OR REPLACE TRIGGER trg_max_value_order
AFTER INSERT OR UPDATE ON CTHD
FOR EACH ROW
DECLARE
  total_value NUMBER;
BEGIN
  SELECT SUM(GIABAN * SL) INTO total_value FROM CTHD WHERE MAHD = :NEW.MAHD;
  IF total_value > 50000000 THEN
    RAISE_APPLICATION_ERROR(-20005, 'Tổng trị giá hóa đơn không được vượt quá 50.000.000');
  END IF;
END;

UPDATE CTHD SET GIABAN = 100000000 WHERE MAHD = 'HD002' AND MAVT = 'VT01';




